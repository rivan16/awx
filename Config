##@@FIREWALL
sudo setenforce 0

sudo sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/sysconfig/selinux

sestatus

sudo firewall-cmd --permanent --add-port=6443/tcp
sudo firewall-cmd --permanent --add-port=2379-2380/tcp
sudo firewall-cmd --permanent --add-port=10250/tcp
sudo firewall-cmd --permanent --add-port=10251/tcp
sudo firewall-cmd --permanent --add-port=10259/tcp
sudo firewall-cmd --permanent --add-port=10257/tcp
sudo firewall-cmd --permanent --add-port=179/tcp
sudo firewall-cmd --permanent --add-port=443/tcp
sudo firewall-cmd --permanent --add-port=80/tcp
sudo firewall-cmd --permanent --add-port=8042/tcp
sudo firewall-cmd --permanent --add-port=4789/udp

sudo firewall-cmd --permanent --add-port=179/tcp
sudo firewall-cmd --permanent --add-port=10250/tcp
sudo firewall-cmd --permanent --add-port=30000-32767/tcp
sudo firewall-cmd --permanent --add-port=4789/udp

sudo firewall-cmd --reload


**************************************************************************************

#@@INSTALLATION OF Kubectl

# This overwrites any existing configuration in /etc/yum.repos.d/kubernetes.repo
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/repodata/repomd.xml.key
EOF

sudo dnf install -y kubectl
sudo dnf install -y {kubelet,kubeadm,kubectl} --disableexcludes=Kubernetes
kubectl version --client

IF ERROR INSTALL THIS FIRST:
date
sudo dnf install -y chrony
sudo systemctl enable --now chronyd
sudo chronyc sources -v

***********************************************************************************

#@@INSTALLATION OF DOCKER

sudo dnf remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine
sudo dnf -y install dnf-utils
sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl status docker
docker --version

***********************************************************************************
#@@INSTALLATION OF MINIKUBE

curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube
ls -l /usr/local/bin/minikube
sudo mv minikube-linux-amd64 /usr/local/bin/minikube
sudo chmod +x /usr/local/bin/minikube
echo $PATH
echo 'export PATH=$PATH:/usr/local/bin' >> ~/.bashrc
source ~/.bashrc
minikube version
minikube start --service-cluster-ip-range 192.168.108.0/24 --force
minikube start --cni=flannel --kubernetes-version=v1.25.0 --extra-config=kubelet.network-plugin=cni --extra-config=kubelet.cluster-cidr=192.168.108.0/24 --force
minikube start --force
minikube status
kubectl config use-context minikube
kubectl get nodes
minikube dashboard
minikube logs
minikube stop
minikube delete
minikube start --force
minikube start --driver=none --force

#CHANGE THE IP OF MINIKUBE
minikube stop
minikube start --driver=docker --listen-address=192.168.108.141 --force

************************************************************************
#@@INSTALL CRI-DOCKERD
curl -L https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.4/cri-dockerd-0.3.4.amd64.tgz -o cri-dockerd.tgz
tar -xzf cri-dockerd.tgz
sudo mv cri-dockerd/cri-dockerd /usr/local/bin/
sudo chmod +x /usr/local/bin/cri-dockerd
cri-dockerd --version

***********************************************************************
#@@ INSTALL ANSIBLE
dnf update -y

dnf install epel-release -y

dnf install python

dnf install ansible -y

dnf install telnet -y

dnf install nano -y

dnf install python3-netaddr -y

ansible-galaxy collection install cisco.ios
*******************************************************************
@CENTOS - DON'T FORGET TO DO THIS

chmod -R 777 /etc/ansible/
*******************************************************************

nano /etc/ssh/ssh_config


Include /etc/ssh/ssh_config.d/*.conf
HostKeyAlgorithms +ssh-rsa
PubkeyAcceptedKeyTypes +ssh-rsa


**********************************************************************

nano /etc/ssh/sshd_config

Include /etc/ssh/sshd_config.d/*.conf
HostKeyAlgorithms +ssh-rsa
PubkeyAcceptedKeyTypes +ssh-rsa

************************************************************************
dnf install python3-pip
pip3 install paramiko

***********************************************************************

nano ansible.cfg

[paramiko_connection]
look_for_keys = False

***********************************************************************

ansible-config dump --only-changed -t all

***********************************************************************
sudo systemctl restart sshd
update-crypto-policies --set LEGACY

**********************************************************************
@@AWX 2.19.1
sudo dnf update -y
sudo dnf groupinstall "Development Tools" -y
git clone https://github.com/ansible/awx-operator

https://ansible.readthedocs.io/projects/awx-operator/en/latest/installation/basic-install.html


